name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  testing:
    name: Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install .[test]
          pip install pytest-cov

      - name: Run unit tests with coverage
        run: |
          source venv/bin/activate
          coverage run -m pytest log_analyzer/src/tests/
          coverage report -m
          coverage xml

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: Upload coverage report as review
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: code-quality-report
          path: ${{ github.workspace }}/code-quality-report.json

  ruff_check:
    name: Ruff Check
    runs-on: ubuntu-latest
    needs: testing

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruff
        uses: docker://ghcr.io/astral-sh/ruff:0.9.1-alpine

      - name: Run Ruff check
        run: |
          docker run --rm -v $GITHUB_WORKSPACE:/app ghcr.io/astral-sh/ruff:0.9.1-alpine ruff check --output-format=gitlab > code-quality-report.json

      - name: Upload code quality report
        uses: actions/upload-artifact@v3
        with:
          name: code-quality-report
          path: code-quality-report.json

  ruff_format:
    name: Ruff Format
    runs-on: ubuntu-latest
    needs: ruff_check

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Ruff format
        run: |
          docker run --rm -v $GITHUB_WORKSPACE:/app ghcr.io/astral-sh/ruff:0.9.1-alpine ruff format --diff